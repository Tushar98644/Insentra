export const formatCommitComment = (commit: any, summary: string, repoFullName: string): string => {
    const timestamp = new Date(commit.timestamp || Date.now()).toLocaleString("en-US", {
        timeZone: "Asia/Kolkata",
        dateStyle: "medium",
        timeStyle: "short",
    });

    const filesChanged = [
        ...(commit.added || []).map((f: string) => `  + ${f}`),
        ...(commit.modified || []).map((f: string) => `  ~ ${f}`),
        ...(commit.removed || []).map((f: string) => `  - ${f}`),
    ];

    return `🔄 NEW COMMIT DETECTED

📝 Commit Title: ${commit.message}
👤 Author: ${commit.author?.name || "Unknown"}
📅 Time: ${timestamp}
🔗 Repository: ${repoFullName}
🆔 Commit ID: ${commit.id?.slice(0, 7)}

📂 Files Changed (${filesChanged.length}):
${filesChanged.length > 0 ? filesChanged.slice(0, 10).join("\n") : "  No files listed"}
${filesChanged.length > 10 ? `\n  ... and ${filesChanged.length - 10} more files` : ""}

🤖 AI Analysis:
${summary}

───────────────
Generated by AI Assistant`;
};

export const formatPRComment = (pr: any, action: string, summary: string, repoFullName: string): string => {
    const timestamp = new Date(pr.updated_at || Date.now()).toLocaleString("en-US", {
        timeZone: "Asia/Kolkata",
        dateStyle: "medium",
        timeStyle: "short",
    });

    const actionEmoji =
        {
            opened: "🆕",
            synchronize: "🔄",
            closed: pr.merged ? "✅" : "❌",
            reopened: "🔄",
        }[action] || "📝";

    const actionText = action.charAt(0).toUpperCase() + action.slice(1);

    return `${actionEmoji} PULL REQUEST ${actionText.toUpperCase()}

📝 PR Title: ${pr.title}
👤 Author: ${pr.user?.login || "Unknown"}
📅 Time: ${timestamp}
🔗 Repository: ${repoFullName}
🔢 Pull Request #${pr.number}
🌿 Branch: ${pr.head?.ref} → ${pr.base?.ref}
${pr.html_url ? `🔗 URL: ${pr.html_url}` : ""}

📋 Description:
${pr.body ? (pr.body.length > 300 ? pr.body.slice(0, 300) + "..." : pr.body) : "No description provided"}

🤖 AI Analysis:
${summary}

───────────────
Generated by AI Assistant`;
};
